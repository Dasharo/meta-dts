---
name: Weekly clean & rebuild
on:
  schedule:
    - cron: '0 8 * * 6'
  workflow_dispatch:

concurrency:
  group: run-only-one-workflow

jobs:
  build-uefi-sb:
    uses: Dasharo/meta-dts/.github/workflows/build.yml
    with:
      cacheless: true
      kas-path: meta-dts/kas-uefi-sb.yml
      ref: develop
  move-build-artifacts:
    needs: build-uefi-sb
    runs-on:
      labels: dts-builder
    steps:
      - name: Move UEFI SB build artifacts
        run: |
          mv build build-sb
  build:
    needs: move-build-artifacts
    uses: Dasharo/meta-dts/.github/workflows/build.yml
    with:
      cacheless: true
      kas-path: meta-dts/kas.yml
      ref: develop
  deploy-cache:
    name: Deploy cache on cache.dasharo.com
    needs: build
    runs-on:
      labels: dts-builder
    steps:
      - name: Prepare SSH key
        shell: bash
        env:
          SSH_KEY: ${{secrets.SSH_KEY}}
        run: |
          echo -e ${SSH_KEY} > ~/.ssh/dts-ci-key
          chmod 600 ~/.ssh/dts-ci-key
      - name: Send sstate-cache folder to cache.dasharo.com
        shell: bash
        run: |
          ssh -i ~/.ssh/dts-ci-key builder@10.1.40.2 "mkdir -p cache/yocto/dts"
          ssh -i ~/.ssh/dts-ci-key builder@10.1.40.2 "mkdir -p cache/yocto/dts/dts-uefi-sb"
          rsync -P -e "ssh -i ~/.ssh/dts-ci-key" -rlptD --delete build/sstate-cache builder@10.1.40.2:cache/yocto/dts
          rsync -P -e "ssh -i ~/.ssh/dts-ci-key" -rlptD --delete build-sb/sstate-cache builder@10.1.40.2:cache/yocto/dts/dts-uefi-sb
      - name: Send downloads folder to cache.dasharo.com
        shell: bash
        run: |
          rsync -P -e "ssh -i ~/.ssh/dts-ci-key" -rlptD --delete build/downloads builder@10.1.40.2:cache/yocto/dts
          rsync -P -e "ssh -i ~/.ssh/dts-ci-key" -rlptD --delete build-sb/downloads builder@10.1.40.2:cache/yocto/dts/dts-uefi-sb
  deploy-nightly-images:
      name: Deploy nightly DTS artifacts on boot.dasharo.com
      needs: build
      runs-on:
        labels: dts-builder
      steps:
        - name: Prepare SSH key
          shell: bash
          env:
            SSH_KEY: ${{secrets.SSH_KEY}}
          run: |
            echo -e ${SSH_KEY} > ~/.ssh/dts-ci-key
            chmod 600 ~/.ssh/dts-ci-key
        - name: Get timestamp for nightly build
          id: nightly-ver
          shell: bash
          run: |
            NIGHTLY_VER=$(date +"%Y-%m-%d-%H-%M")
            echo "NIGHTLY_VER=${NIGHTLY_VER}" >> $GITHUB_ENV
        - name: Deploy DTS on boot.dasharo.com
          shell: bash
          run: |
            NIGHTLY_VER="${{ env.NIGHTLY_VER }}"
            ssh -i ~/.ssh/dts-ci-key builder@10.1.40.2 "mkdir -p boot/dts/nightly/${NIGHTLY_VER}"
            cd build/tmp/deploy/images/genericx86-64/
            cp bzImage bzImage-${NIGHTLY_VER}
            cp dts-base-image-genericx86-64.cpio.gz dts-base-image-${NIGHTLY_VER}.cpio.gz
            cp dts-base-image-genericx86-64.wic.gz dts-base-image-${NIGHTLY_VER}.wic.gz
            cp dts-base-image-genericx86-64.wic.bmap dts-base-image-${NIGHTLY_VER}.wic.bmap
            scp -i ~/.ssh/dts-ci-key bzImage-${NIGHTLY_VER} builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.cpio.gz builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.wic.gz builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.wic.bmap builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
        - name: Deploy manifest and sha256
          shell: bash
          run: |
            NIGHTLY_VER="${{ env.NIGHTLY_VER }}"
            cd build/tmp/deploy/images/genericx86-64/
            cp dts-base-image-genericx86-64.manifest dts-base-image-${NIGHTLY_VER}.manifest
            sha256sum bzImage-${NIGHTLY_VER} > bzImage-${NIGHTLY_VER}.sha256
            sha256sum dts-base-image-${NIGHTLY_VER}.cpio.gz > dts-base-image-${NIGHTLY_VER}.cpio.gz.sha256
            sha256sum dts-base-image-${NIGHTLY_VER}.wic.gz > dts-base-image-${NIGHTLY_VER}.wic.gz.sha256
            sha256sum dts-base-image-${NIGHTLY_VER}.wic.bmap > dts-base-image-${NIGHTLY_VER}.wic.bmap.sha256
            sha256sum dts-base-image-${NIGHTLY_VER}.manifest > dts-base-image-${NIGHTLY_VER}.manifest.sha256
            scp -i ~/.ssh/dts-ci-key bzImage-${NIGHTLY_VER}.sha256 builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.cpio.gz.sha256 builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.wic.gz.sha256 builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.wic.bmap.sha256 builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
            scp -i ~/.ssh/dts-ci-key dts-base-image-${NIGHTLY_VER}.manifest.sha256 builder@10.1.40.2:boot/dts/nightly/${NIGHTLY_VER}/
  cleanup:
    name: Cleanup
    if: always()
    needs: deploy-nightly-images
    runs-on:
      labels: dts-builder
    steps:
      - name: Cleanup after deployment
        shell: bash
        run: |
          rm -rf ~/.ssh/dts-ci-key
          rm -rf build build-sb
